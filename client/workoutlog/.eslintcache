[{"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\index.js":"1","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\reportWebVitals.js":"2","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\App.js":"3","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\home\\Navbar.js":"4","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Auth.js":"5","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Signup.js":"6","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Login.js":"7","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutIndex.js":"8","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutCreate.js":"9","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutTable.jsx":"10","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutEdit.jsx":"11"},{"size":547,"mtime":1612044492568,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"13"},{"size":931,"mtime":1612449941589,"results":"15","hashOfConfig":"13"},{"size":874,"mtime":1612320285675,"results":"16","hashOfConfig":"13"},{"size":584,"mtime":1612058011820,"results":"17","hashOfConfig":"13"},{"size":1526,"mtime":1612449807806,"results":"18","hashOfConfig":"13"},{"size":1442,"mtime":1612449811517,"results":"19","hashOfConfig":"13"},{"size":2063,"mtime":1612449858635,"results":"20","hashOfConfig":"13"},{"size":2130,"mtime":1612319799753,"results":"21","hashOfConfig":"13"},{"size":1668,"mtime":1612389193875,"results":"22","hashOfConfig":"13"},{"size":2358,"mtime":1612390431924,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"mb2ja",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"44","usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"51","usedDeprecatedRules":"26"},"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\index.js",[],["52","53"],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\reportWebVitals.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\App.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\home\\Navbar.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Auth.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Signup.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\auth\\Login.js",[],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutIndex.js",["54"],"import React, {useState, useEffect} from 'react';\r\nimport {Container, Row, Col} from 'reactstrap';\r\nimport WorkoutCreate from './WorkoutCreate';\r\nimport WorkoutTable from './WorkoutTable';\r\nimport WorkoutEdit from './WorkoutEdit';\r\n\r\n\r\n\r\n\r\nconst WorkoutIndex = (props) => {\r\n    const [workouts, setWorkouts] = useState([]);\r\n    const [updateActive, setUpdateActive] = useState(false);\r\n    const [workoutToUpdate, setWorkoutToUpdate] = useState({});\r\n\r\n    const fetchWorkouts = () => {\r\n        fetch('http://localhost:3000/log/', {\r\n            method: 'GET',\r\n            headers: new Headers ({\r\n            'Content-Type': 'application/json',\r\n            'Authorization': props.token\r\n            })\r\n        }).then( (res) => res.json())\r\n        .then((logData) => {\r\n                setWorkouts(logData)\r\n                console.log(logData);\r\n        })\r\n}\r\n\r\n    const editUpdateWorkout = (workout) => {\r\n        setWorkoutToUpdate(workout);\r\n        console.log(workout);\r\n    }\r\n\r\n    const updateOn = () => {\r\n        setUpdateActive(true);\r\n    }\r\n    \r\n    const updateOff = () => {\r\n        setUpdateActive(false);\r\n    }\r\n\r\nuseEffect(() => {\r\n    fetchWorkouts();\r\n}, [])\r\n\r\n\r\nreturn (\r\n    <Container>\r\n        <Row>\r\n        <Col md=\"3\">\r\n                <WorkoutCreate fetchWorkouts={fetchWorkouts} token={props.token}/>\r\n            </Col>\r\n            <Col md=\"9\">\r\n                <WorkoutTable workouts={workouts} editUpdateWorkout={editUpdateWorkout} updateOn={updateOn} fetchWorkouts={fetchWorkouts} token={props.token}/>\r\n                </Col>\r\n                {updateActive ? <WorkoutEdit workoutToUpdate={workoutToUpdate} updateOff={updateOff} token={props.token} fetchWorkouts={fetchWorkouts}/> : <></>}\r\n            </Row>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default WorkoutIndex;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// export default props => (\r\n//     <AuthContext.Consumer>\r\n//         {auth => <WorkoutIndex {...props} auth={auth} />}\r\n//     </AuthContext.Consumer>\r\n// );\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutCreate.js",["55","56"],"import React, {useState, useEffect} from 'react';\r\nimport {Button, Form, FormGroup, Label, Input} from 'reactstrap';\r\n\r\nconst WorkoutCreate = (props) => {\r\n    const [description, setDescription] = useState('');\r\n    const [definition, setDefinition] = useState('');\r\n    const [result, setResult] = useState('');\r\n\r\n\r\n    const handleSumbit = (e) => {\r\n        e.preventDefault();\r\n        fetch('http://localhost:3000/log/', {\r\n            method: 'POST',\r\n            body: JSON.stringify({log: {description: description, definition: definition, result: result}}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n        })\r\n    }) .then((res) => res.json())\r\n    .then((logData) => {\r\n        console.log(logData);\r\n        setDescription('');\r\n        setDefinition('');\r\n        setResult('');\r\n        props.fetchWorkouts();\r\n    })\r\n}\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3>Log a Workout</h3>\r\n            <Form onSubmit={handleSumbit}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"description\"/>\r\n                    <Input name=\"description\" placeholder=\"Description\" value={description} onChange={(e) => setDescription(e.target.value)}/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"definition\"/>\r\n                    <Input type=\"select\" name=\"definition\" value={definition} onChange={(e) => setDefinition(e.target.value)}>\r\n                        <option value=\"Time\">Time</option>\r\n                        <option value=\"Weight\">Weight</option>\r\n                        <option value=\"Distance\">Distance</option>\r\n                    </Input>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"result\"/>\r\n                    <Input name=\"result\" placeholder=\"Result\" value={result} onChange={(e) => setResult(e.target.value)}/>\r\n                </FormGroup>\r\n                <Button type=\"submit\">Click to Submit</Button>\r\n            </Form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default WorkoutCreate;\r\n\r\n","C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutTable.jsx",["57"],"import React, { useState } from 'react';\r\nimport {Table, Button} from 'reactstrap';\r\n\r\nconst WorkoutTable = (props) => {\r\n\r\n    const deleteWorkout = (workout) => {\r\n        fetch(`http://localhost:3000/log/${workout.id}` ,{\r\n            method: 'DELETE',\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        })\r\n        .then(() => props.fetchWorkouts())\r\n    }\r\n\r\n    const workoutMapper = () => {\r\n        return props.workouts.map((workout, index) => {\r\n            return(\r\n                <tr key={index}>\r\n                    <th scope=\"row\">{workout.id}</th>\r\n                    <td>{workout.result}</td>\r\n                    <td>{workout.description}</td>\r\n                    <td>{workout.definition}</td>\r\n                    <td>\r\n                        <Button color=\"warning\" onClick={() => {props.editUpdateWorkout(workout); props.updateOn()}}>Update</Button>\r\n                        <Button color=\"danger\" onClick={() => {deleteWorkout(workout)}}>Delete</Button>\r\n                    </td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n    return (  \r\n        <>\r\n        <h3>Workout History</h3>\r\n        <hr/>\r\n        <Table striped>\r\n            <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Result</th>\r\n                    <th>Description</th>\r\n                    <th>Definition</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {workoutMapper()}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default WorkoutTable;",["58","59"],"C:\\Users\\danie\\OneDrive\\Documents\\blueBadge-EFA\\WorkoutLog\\client\\workoutlog\\src\\workouts\\WorkoutEdit.jsx",["60"],"import React, { useState } from 'react';\r\nimport { Button, Form, FormGroup, Label, Input, Modal, ModalBody, ModalHeader } from 'reactstrap';\r\n\r\nconst WorkoutEdit = (props) => {\r\n    const [editDesc, setEditDesc] = useState(props.workoutToUpdate.description);\r\n    const [editDef, setEditDef] = useState(props.workoutToUpdate.definition);\r\n    const [editRes, setEditRes] = useState(props.workoutToUpdate.result);\r\n\r\n\r\n    const workoutUpdate = (event, workout) => {\r\n        event.preventDefault();\r\n        fetch(`http://localhost:3000/log/${props.workoutToUpdate.id}`, {\r\n            method: 'PUT',\r\n            body: JSON.stringify({log: {description: editDesc, definition: editDef, result: editRes}}),\r\n            headers: new Headers({\r\n                'Content-Type': 'application/json',\r\n                'Authorization': props.token\r\n            })\r\n        }) .then((res) => {\r\n            props.fetchWorkouts();\r\n            props.updateOff();\r\n        })\r\n    }\r\n\r\n    return (\r\n       <Modal isOpen={true}>\r\n           <ModalHeader>Log a Workout</ModalHeader>\r\n           <ModalBody>\r\n               <Form onSubmit={workoutUpdate}>\r\n                   <FormGroup>\r\n                       <Label htmlfor=\"result\">Edit Result:</Label>\r\n                       <Input name=\"result\" value={editRes} onChange={(e) => setEditRes(e.target.value)}/>\r\n                   </FormGroup>\r\n                   <FormGroup>\r\n                       <Label htmlfor=\"description\">Edit Description:</Label>\r\n                       <Input name=\"description\" value={editDesc} onChange={(e) => setEditDesc(e.target.value)}/>\r\n                   </FormGroup>\r\n                   <FormGroup>\r\n                       <Label htmlfor=\"definition\">Edit Definition:</Label>\r\n                       <Input  type=\"select\" name=\"definition\" value={editDef} onChange={(e) => setEditDef(e.target.value)}>\r\n                       <option></option>\r\n                       <option value=\"Time\">Time</option>\r\n                       <option value=\"Weight\">Weight</option>\r\n                       <option value=\"Distance\">Distance</option>\r\n                       </Input>\r\n                   </FormGroup>\r\n                   <Button type=\"submit\">Update the workout!</Button>\r\n               </Form>\r\n           </ModalBody>\r\n       </Modal>\r\n    )\r\n}\r\n\r\nexport default WorkoutEdit;\r\n\r\n",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":44,"column":4,"nodeType":"67","endLine":44,"endColumn":6,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":1,"column":26,"nodeType":"71","messageId":"72","endLine":1,"endColumn":35},{"ruleId":"73","severity":1,"message":"74","line":12,"column":9,"nodeType":"75","messageId":"76","endLine":19,"endColumn":13,"fix":"77"},{"ruleId":"69","severity":1,"message":"78","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"61","replacedBy":"79"},{"ruleId":"63","replacedBy":"80"},{"ruleId":"73","severity":1,"message":"74","line":12,"column":9,"nodeType":"75","messageId":"76","endLine":19,"endColumn":17,"fix":"81"},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchWorkouts'. Either include it or remove the dependency array.","ArrayExpression",["84"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-whitespace-before-property","Unexpected whitespace before property then.","MemberExpression","unexpectedWhitespace",{"range":"85","text":"86"},"'useState' is defined but never used.",["82"],["83"],{"range":"87","text":"86"},"no-global-assign","no-unsafe-negation",{"desc":"88","fix":"89"},[722,724],".",[868,870],"Update the dependencies array to be: [fetchWorkouts]",{"range":"90","text":"91"},[1188,1190],"[fetchWorkouts]"]